SCRUM Analitics DB Architechture:
Ticket Table
|| Ticket !PrimaryKey |Developer !textKey| Project !textKey| SP | LW | Complejidad | Skill !textKey| Info ||

Developer Table
| Developer !id ||||| Ticket |

//TODO: Growning stats

View) dev(i).info() {
    dev(i).sprints();
    dev(i).skills();
    ------------------
    for all(k)
        dev(i).sprint(j)
    for all(k)
        dev(i).skill(k);
    }


2) dev(i).sprints()
    * Media(todos los sprints) de %sp cerrados / team sp cerrados
    * Media(todos los sprints) #tickets complejos cerrados / team #tickets complejos cerrados
    * Max dev[i] sp cerrados / team sp cerrados && que sprint
    * Min dev[i] sp cerrados / team sp cerrados && que sprint

3) dev(i).skills()
    * List all skills gotten from closed tickets: {max1, max2, ... , min2, min3} //all skills != 0
    * For each skill (z) on the list:
        * #tickets cerrados de skill[z] por dev(i) (a) / #tickets cerrados de skill[z] por todos (b) , {a,b}

4) dev(i).sprint(j):
    * dev[i] sp cerrados / team sp cerrados
    * dev[i] #tickets complejos cerrados / team #tickets complejos cerrados
    * dev[i] #refined tickets / team #refined tickets ; if !training
    * dev[i] #trainings; if training

    
5) dev(i).skill(j):
    * #tickets cerrados de skill[j] por dev(i) (a) / #tickets cerrados de skill[j] por todos (b) , {a,b}
    * dev[i] #tickets complejos cerrados / team #tickets complejos cerrados
    * dev[i] #refined tickets / team #refined tickets ; if !training
    * dev[i] #trainings; if training
